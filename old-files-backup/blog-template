<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Blog Post Title</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
            background-color: #1a1a1a;
            color: #e0e0e0;
            min-height: 100vh;
            padding: 20px;
            line-height: 1.6;
            position: relative;
            overflow-x: hidden;
        }
        
        /* Background canvas for particles */
        #particles-canvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }
        
        .container {
            background-color: rgba(42, 42, 42, 0.85);
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            padding: 40px;
            max-width: 800px;
            margin: 40px auto;
            backdrop-filter: blur(5px);
        }
        
        .header {
            text-align: center;
            margin-bottom: 40px;
        }
        
        h1 {
            font-size: 28px;
            margin-bottom: 20px;
            color: #e3b87d;
        }
        
        h2 {
            font-size: 22px;
            margin: 30px 0 15px;
            color: #e3b87d;
        }
        
        h3 {
            font-size: 18px;
            margin: 25px 0 10px;
            color: #d0d0d0;
        }
        
        p {
            font-size: 16px;
            color: #d0d0d0;
            margin-bottom: 20px;
        }
        
        /* Navigation styles */
        .nav {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .nav-link {
            display: inline-block;
            padding: 6px 12px;
            margin: 0 5px;
            color: #e3b87d;
            text-decoration: none;
            border-bottom: 2px solid transparent;
            transition: all 0.3s ease;
        }
        
        .nav-link:hover, .nav-link.active {
            border-bottom: 2px solid #e3b87d;
        }
        
        /* Blog post styles */
        .post-meta {
            font-size: 14px;
            color: #a98d6d;
            margin-bottom: 30px;
            text-align: center;
        }
        
        .tag {
            display: inline-block;
            font-size: 12px;
            padding: 3px 8px;
            margin-right: 5px;
            background-color: rgba(169, 141, 109, 0.2);
            border: 1px solid #a98d6d;
            border-radius: 4px;
            color: #a98d6d;
        }
        
        .back-link {
            display: inline-block;
            margin-top: 30px;
            color: #a98d6d;
            text-decoration: none;
            transition: color 0.3s ease;
        }
        
        .back-link:hover {
            color: #e3b87d;
        }
        
        pre {
            background-color: rgba(30, 30, 30, 0.8);
            padding: 15px;
            border-radius: 5px;
            overflow-x: auto;
            margin: 20px 0;
            border-left: 3px solid #e3b87d;
        }
        
        code {
            font-family: 'Courier New', Courier, monospace;
            color: #d4d4d4;
        }
        
        .image-container {
            margin: 25px 0;
            text-align: center;
        }
        
        .pseudocode {
            font-family: 'Courier New', Courier, monospace;
            padding: 15px;
            background-color: rgba(30, 30, 30, 0.8);
            border-radius: 5px;
            margin: 20px 0;
            white-space: pre-wrap;
            border-left: 3px solid #e3b87d;
        }
        
        .note {
            background-color: rgba(227, 184, 125, 0.1);
            border-left: 3px solid #e3b87d;
            padding: 15px;
            margin: 20px 0;
            border-radius: 0 5px 5px 0;
        }
        
        .navigation-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid rgba(227, 184, 125, 0.3);
        }
    </style>
</head>
<body>
    <canvas id="particles-canvas"></canvas>
    
    <div class="container">
        <div class="header">
            <div class="nav">
                <a href="index.html" class="nav-link">Home</a>
                <a href="blog.html" class="nav-link">Blog</a>
            </div>
            <h1>Your Blog Post Title</h1>
            <div class="post-meta">Date · Reading Time · <span class="tag">Tag 1</span> <span class="tag">Tag 2</span></div>
        </div>
        
        <!-- Introduction -->
        <p>
            Your introductory paragraph goes here. Explain what this post is about and why it matters.
        </p>
        
        <!-- Main Content -->
        <h2>First Section Heading</h2>
        
        <p>
            Section content goes here.
        </p>
        
        <!-- Code Example (if needed) -->
        <pre><code>// Your code example
function exampleFunction() {
    return "Hello, Game Development!";
}</code></pre>

        <!-- Note Box (if needed) -->
        <div class="note">
            <strong>Tip:</strong> Add helpful tips or important notes here.
        </div>
        
        <h2>Second Section Heading</h2>
        
        <p>
            More content here.
        </p>
        
        <!-- Conclusion -->
        <h2>Conclusion</h2>
        
        <p>
            Summarize key points and possibly mention what's coming in future posts.
        </p>
        
        <!-- Navigation -->
        <div class="navigation-buttons">
            <a href="blog.html" class="back-link">← All Blog Posts</a>
            <a href="#" class="back-link">Next Post: Title →</a>
        </div>
    </div>

    <script>
        // Background particles script
        (function() {
            const canvas = document.getElementById('particles-canvas');
            const ctx = canvas.getContext('2d');
            
            // Set canvas dimensions to match window
            function resizeCanvas() {
                canvas.width = window.innerWidth;
                canvas.height = window.innerHeight;
            }
            
            window.addEventListener('resize', resizeCanvas);
            resizeCanvas();
            
            // Particle class
            class Particle {
                constructor() {
                    this.reset();
                }
                
                reset() {
                    this.x = Math.random() * canvas.width;
                    this.y = Math.random() * canvas.height;
                    this.size = Math.random() * 2 + 0.5;
                    this.speed = Math.random() * 0.5 + 0.1;
                    this.angle = Math.random() * 360;
                    this.color = Math.random() > 0.85 ? 
                                 'rgba(227, 184, 125, ' + (Math.random() * 0.35 + 0.1) + ')' : 
                                 'rgba(150, 150, 150, ' + (Math.random() * 0.15 + 0.05) + ')';
                    this.opacity = Math.random() * 0.5 + 0.1;
                }
                
                update() {
                    this.x += Math.cos(this.angle * Math.PI / 180) * this.speed;
                    this.y += Math.sin(this.angle * Math.PI / 180) * this.speed;
                    
                    // Change angle slightly for meandering effect
                    this.angle += Math.random() * 2 - 1;
                    
                    // Reset particles that move off-screen
                    if (this.x < -10 || this.x > canvas.width + 10 || this.y < -10 || this.y > canvas.height + 10) {
                        this.reset();
                    }
                }
                
                draw() {
                    ctx.beginPath();
                    ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
                    ctx.fillStyle = this.color;
                    ctx.fill();
                }
            }
            
            // Create particles array
            const particlesArray = [];
            const particleCount = Math.min(window.innerWidth / 10, 100); // Responsive particle count
            
            for (let i = 0; i < particleCount; i++) {
                particlesArray.push(new Particle());
            }
            
            // Animation loop
            function animate() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                
                for (let i = 0; i < particlesArray.length; i++) {
                    particlesArray[i].update();
                    particlesArray[i].draw();
                }
                
                requestAnimationFrame(animate);
            }
            
            animate();
        })();
    </script>
</body>
</html>